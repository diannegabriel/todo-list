{"version":3,"sources":["components/Form.jsx","components/Todo.jsx","components/TodoList.jsx","components/Quote.jsx","components/Error.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","setError","onChange","e","target","value","type","className","onClick","preventDefault","length","id","text","completed","name","Todo","todo","map","item","filter","elem","TodoList","filteredTodos","Quote","quote","Error","error","App","useState","status","setFilteredTodos","setQuote","useEffect","getLocalTodos","a","fetch","json","then","randomQuote","Math","floor","random","author","fetchQuote","handleFilter","localStorage","setItem","JSON","stringify","getItem","localTodo","parse","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d4faeae.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus, setError }) => {\n  const handleInputText = (e) => {\n    setInputText(e.target.value);\n  };\n  const handleTodoSubmit = (e) => {\n    e.preventDefault();\n    if (inputText.length === 0) {\n      setError(true)\n    } else {\n      setTodos([\n        ...todos,\n        { \n          id: todos.length,\n          text: inputText,\n          completed: false\n        }\n      ]);\n      setInputText('');\n      setError(false);\n    }\n  };\n  const handleStatusChange = (e) => {\n    setStatus(e.target.value)\n  }\n  return (\n    <form>\n      <input onChange={handleInputText} value={inputText} type=\"text\" className=\"todo-input\"/>\n      <button onClick={handleTodoSubmit} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={handleStatusChange} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"incomplete\">Incomplete</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;","import React from \"react\";\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n  const handleComplete = () => {\n    setTodos(todos.map((item) => {\n      if (item.id === todo.id) {\n        return {\n          ...item,\n          completed: !item.completed\n        }\n      }\n      return item;\n    }));\n  }\n  const handleDelete = () => {\n    setTodos(todos.filter(elem => elem.id !== todo.id))\n  };\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>\n        {text}\n      </li>\n      <button className=\"complete-btn\" onClick={handleComplete}>\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button className=\"trash-btn\" onClick={handleDelete}>\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  )\n};\n\nexport default Todo;","import React from \"react\";\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map(todo => (\n          <Todo \n            key={todo.id} \n            text={todo.text}\n            todo={todo}\n            todos={todos}\n            setTodos={setTodos}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n};\n\nexport default TodoList;","import React from \"react\";\n\nconst Quote = ({ quote }) => {\n  return (\n    <div className=\"quote-container\">\n      <p>\n      {quote}\n      </p>\n    </div>\n  )\n};\n\nexport default Quote;","import React from \"react\";\n\nconst Error = ({ error, inputText, setError }) => {\n\n  return (\n    <div className=\"error-container\">\n      {error&&inputText.length === 0?\n        <label>Please add a thing to do!</label>:\"\"\n      }\n    </div>\n  )\n};\n\nexport default Error;","import { useState, useEffect } from \"react\"\n\nimport './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList';\nimport Quote from './components/Quote'\nimport Error from \"./components/Error\";\n\nconst motivateURL = `https://type.fit/api/quotes`;\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [quote, setQuote] = useState('')\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n\n  useEffect(() => {\n    const fetchQuote = async () => {\n      const result = await fetch(motivateURL)\n      result.json().then(json => {\n        const randomQuote = Math.floor(Math.random() * json.length)\n        if (json[randomQuote].author === null){\n          setQuote(json[randomQuote].text)\n        } else {\n          setQuote(json[randomQuote].text + \" â€” \" + json[randomQuote].author)\n        }\n      })\n    }\n    fetchQuote();\n  }, []);\n  useEffect(() => {\n    const handleFilter = () => {\n      switch(status){\n        case 'completed':\n          setFilteredTodos(todos.filter(todo => todo.completed === true));\n          break;\n        case 'incomplete':\n          setFilteredTodos(todos.filter(todo => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    }\n    handleFilter();\n  }, [todos, status])\n\n  useEffect(() => {\n    const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n    saveLocalTodos();\n  }, [todos, status])\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let localTodo = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(localTodo)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1><a href=\"/\">MotivaDid</a></h1>\n      </header>\n      <Quote\n        quote={quote}\n      />\n      <Form \n        inputText={inputText} \n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n        setStatus={setStatus}\n        setError={setError}\n      />\n      <Error \n        error={error}\n        inputText={inputText} \n      />\n      <TodoList \n        todos={todos} \n        setTodos={setTodos} \n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}